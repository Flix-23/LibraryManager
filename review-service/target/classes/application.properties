spring.application.name=review-service

server.port=8084
spring.data.mongodb.uri=${db_url}

eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#actuator
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/actuator/review

spring.cloud.stream.kafka.binder.enable-observation=true

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


resilience4j.retry.instances.review-service.maxAttempts=3
resilience4j.retry.instances.review-service.waitDuration=1s
resilience4j.retry.instances.review-service.exponentialBackoff=false

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=book-review
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


resilience4j.retry.instances.kafkaRetry.max-attempts=5
resilience4j.retry.instances.kafkaRetry.wait-duration=1s
