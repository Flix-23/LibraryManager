server.port=8084
spring.application.name=review-service

spring.data.mongodb.uri=mongodb://localhost:27017/book

eureka.client.service-url.defoult-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/review

resilience4j.retry.instances.review-service.maxAttempts=3
resilience4j.retry.instances.review-service.waitDuration=1s
resilience4j.retry.instances.review-service.exponentialBackoff=false

spring.kafka.bootstrap-servers=localhost:29095
spring.kafka.consumer.group-id=book-review
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonSerializer

resilience4j.retry.instances.kafkaRetry.max-attempts=5
resilience4j.retry.instances.kafkaRetry.wait-duration=1s
