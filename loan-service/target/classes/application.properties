spring.application.name=loan-service
server.port=8081

eureka.client.service-url.defoult-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


spring.datasource.url=jdbc:postgresql://localhost:5431/lb_loans
spring.datasource.username=postgres
spring.datasource.password=M19-0083
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create


#actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/loan

resilience4j.retry.instances.loan-service.maxAttempts=5
resilience4j.retry.instances.loan-service.waitDuration=2s
resilience4j.retry.instances.loan-service.exponentialBackoff=true
resilience4j.retry.instances.loan-service.ignoreExceptions=java.lang.IllegalArgumentException

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=loan-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

