spring.application.name=book-service
server.port=8082

spring.datasource.url=${db_url}
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create

eureka.client.service-url.default-zone=http://localhost:8762/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#actuator
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/actuator/book
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

spring.cloud.stream.kafka.binder.enable-observation=true

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans

resilience4j.circuitbreaker.instances.book-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.book-service.sliding-window-size=5
resilience4j.circuitbreaker.instances.book-service.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.book-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.book-service.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.book-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.book-service.permitted-number-of-calls-in-half-open-state=3

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=book-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
