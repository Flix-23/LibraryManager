spring.application.name=user-service
server.port=8080

eureka.client.service-url.defoult-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


spring.datasource.url=jdbc:postgresql://localhost:5434/lb_users
spring.datasource.username=postgres
spring.datasource.password=M19-0083
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

#actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/user

resilience4j.circuitbreaker.instances.user-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.user-service.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.user-service.ringBufferSizeInClosedState=10
resilience4j.circuitbreaker.instances.user-service.ringBufferSizeInHalfOpenState=5
resilience4j.circuitbreaker.instances.user-service.minimumNumberOfCalls=3


spring.kafka.bootstrap-servers=localhost:29094
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
