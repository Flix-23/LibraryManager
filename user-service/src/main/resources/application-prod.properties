spring.application.name=user-service
server.port=8080

spring.datasource.url=${db_url}
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#actuator
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/actuator/user

spring.cloud.stream.kafka.binder.enable-observation=true

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans

resilience4j.circuitbreaker.instances.user-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.user-service.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.user-service.ringBufferSizeInClosedState=10
resilience4j.circuitbreaker.instances.user-service.ringBufferSizeInHalfOpenState=5
resilience4j.circuitbreaker.instances.user-service.minimumNumberOfCalls=3

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

